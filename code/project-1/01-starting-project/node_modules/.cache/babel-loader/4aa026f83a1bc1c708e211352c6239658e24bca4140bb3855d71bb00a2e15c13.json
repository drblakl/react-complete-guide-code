{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blakleyd\\\\source\\\\repos\\\\drblakl\\\\react-complete-guide-code\\\\code\\\\project-1\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport logo from './assets/investment-calculator-logo.png';\nimport InvestmentForm from './components/InvestmentForm';\nimport InvestmentResults from './components/InvestmentResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userInput, setUserInput] = useState(null);\n  const resetHandler = () => {\n    setUserInput(null);\n  };\n  const calculateHandler = userInput => {\n    setUserInput(userInput);\n  };\n  const yearlyData = [];\n  if (userInput) {\n    let currentSavings = +userInput['current-savings'];\n    const yearlyContribution = +userInput['yearly-contribution'];\n    const expectedReturn = +userInput['expected-return'] / 100;\n    const duration = +userInput['duration'];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      console.log('looping');\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        key: Math.random() * 1000,\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Investment Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InvestmentForm, {\n      onResetInvestment: resetHandler,\n      onAddInvestment: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InvestmentResults, {\n      items: yearlyData,\n      initialInvestment: userInput != null ? userInput.currentSavings : 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"nCOotz9vTgzH/m310d2/03oFEtk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","logo","InvestmentForm","InvestmentResults","jsxDEV","_jsxDEV","App","_s","userInput","setUserInput","resetHandler","calculateHandler","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","console","log","yearlyInterest","push","key","Math","random","year","savingsEndOfYear","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onResetInvestment","onAddInvestment","items","initialInvestment","_c","$RefreshReg$"],"sources":["C:/Users/blakleyd/source/repos/drblakl/react-complete-guide-code/code/project-1/01-starting-project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport logo from './assets/investment-calculator-logo.png';\r\nimport InvestmentForm from './components/InvestmentForm';\r\nimport InvestmentResults from './components/InvestmentResults';\r\n\r\nfunction App() {\r\n    const [userInput, setUserInput] = useState(null);\r\n\r\n    const resetHandler = () => {\r\n        setUserInput(null);\r\n    }\r\n\r\n    const calculateHandler = (userInput) => {\r\n        setUserInput(userInput);\r\n    };\r\n\r\n    const yearlyData = [];\r\n\r\n    if (userInput) {\r\n        let currentSavings = +userInput['current-savings'];\r\n        const yearlyContribution = +userInput['yearly-contribution'];\r\n        const expectedReturn = +userInput['expected-return'] / 100;\r\n        const duration = +userInput['duration'];\r\n\r\n        // The below code calculates yearly results (total savings, interest etc)\r\n        for (let i = 0; i < duration; i++) {\r\n            console.log('looping');\r\n            const yearlyInterest = currentSavings * expectedReturn;\r\n            currentSavings += yearlyInterest + yearlyContribution;\r\n            yearlyData.push({\r\n                // feel free to change the shape of the data pushed to the array!\r\n                key: Math.random() * 1000,\r\n                year: i + 1,\r\n                yearlyInterest: yearlyInterest,\r\n                savingsEndOfYear: currentSavings,\r\n                yearlyContribution: yearlyContribution,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <header className=\"header\">\r\n                <img src={logo} alt=\"logo\" />\r\n                <h1>Investment Calculator</h1>\r\n            </header>\r\n\r\n            <InvestmentForm onResetInvestment={resetHandler} onAddInvestment={calculateHandler}></InvestmentForm>\r\n            <InvestmentResults items={yearlyData} initialInvestment={userInput != null ? userInput.currentSavings : 0}></InvestmentResults>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,yCAAyC;AAC1D,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,iBAAiB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACvBD,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAME,gBAAgB,GAAIH,SAAS,IAAK;IACpCC,YAAY,CAACD,SAAS,CAAC;EAC3B,CAAC;EAED,MAAMI,UAAU,GAAG,EAAE;EAErB,IAAIJ,SAAS,EAAE;IACX,IAAIK,cAAc,GAAG,CAACL,SAAS,CAAC,iBAAiB,CAAC;IAClD,MAAMM,kBAAkB,GAAG,CAACN,SAAS,CAAC,qBAAqB,CAAC;IAC5D,MAAMO,cAAc,GAAG,CAACP,SAAS,CAAC,iBAAiB,CAAC,GAAG,GAAG;IAC1D,MAAMQ,QAAQ,GAAG,CAACR,SAAS,CAAC,UAAU,CAAC;;IAEvC;IACA,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MAC/BC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtB,MAAMC,cAAc,GAAGP,cAAc,GAAGE,cAAc;MACtDF,cAAc,IAAIO,cAAc,GAAGN,kBAAkB;MACrDF,UAAU,CAACS,IAAI,CAAC;QACZ;QACAC,GAAG,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI;QACzBC,IAAI,EAAER,CAAC,GAAG,CAAC;QACXG,cAAc,EAAEA,cAAc;QAC9BM,gBAAgB,EAAEb,cAAc;QAChCC,kBAAkB,EAAEA;MACxB,CAAC,CAAC;IACN;EACJ;EAEA,oBACIT,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAQuB,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACtBtB,OAAA;QAAKwB,GAAG,EAAE5B,IAAK;QAAC6B,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7B7B,OAAA;QAAAsB,QAAA,EAAI;MAAqB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAET7B,OAAA,CAACH,cAAc;MAACiC,iBAAiB,EAAEzB,YAAa;MAAC0B,eAAe,EAAEzB;IAAiB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAAC,eACrG7B,OAAA,CAACF,iBAAiB;MAACkC,KAAK,EAAEzB,UAAW;MAAC0B,iBAAiB,EAAE9B,SAAS,IAAI,IAAI,GAAGA,SAAS,CAACK,cAAc,GAAG;IAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9H,CAAC;AAEd;AAAC3B,EAAA,CA9CQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}