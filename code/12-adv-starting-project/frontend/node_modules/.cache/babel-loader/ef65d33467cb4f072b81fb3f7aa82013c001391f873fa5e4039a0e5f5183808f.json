{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blakleyd\\\\source\\\\repos\\\\drblakl\\\\react-complete-guide-code\\\\code\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { Suspense, Await } from \"react\";\nimport { useRouteLoaderData, json, redirect, defer } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"...Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 33\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadedEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"...Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 33\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nexport function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //return {isError: true, message: \"Could not fetch events.\"};\n    //throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }),\n    //    {status: 500});\n    return json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    //return response;\n    const resData = await response.json();\n    console.log(resData.events);\n    return resData.events;\n  }\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not delete event.\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["Suspense","Await","useRouteLoaderData","json","redirect","defer","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvent","loadedEvents","_c","loadEvent","id","response","fetch","ok","message","status","resData","loader","request","params","eventId","loadEvents","console","log","action","method","$RefreshReg$"],"sources":["C:/Users/blakleyd/source/repos/drblakl/react-complete-guide-code/code/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { Suspense, Await } from \"react\";\r\nimport { useRouteLoaderData, json, redirect, defer } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventDetailPage() {\r\n    const { event, events } = useRouteLoaderData(\"event-detail\");\r\n\r\n    return (\r\n        <>\r\n            <Suspense fallback={<p style={{textAlign: \"center\"} }>...Loading</p> }>\r\n                <Await resolve={event}>\r\n                    {(loadedEvent) => <EventItem event={loadedEvent} />}\r\n                </Await>\r\n            </Suspense>\r\n            <Suspense fallback={<p style={{ textAlign: \"center\" }}>...Loading</p>}>\r\n                <Await resolve={events}>\r\n                    {(loadedEvents) => <EventsList events={loadedEvents} /> }\r\n                </Await>\r\n            </Suspense>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nasync function loadEvent(id) {\r\n    const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n    if (!response.ok) {\r\n        throw json({ message: \"Could not fetch details for selected event.\" },\r\n            { status: 500 });\r\n    }\r\n    else {\r\n        const resData = await response.json();\r\n        return resData.event;\r\n    }\r\n}\r\n\r\nexport function loader({ request, params }) {\r\n    const id = params.eventId;\r\n\r\n    return defer({\r\n        event: loadEvent(id),\r\n        events: loadEvents()\r\n    });\r\n\r\n}\r\n\r\nasync function loadEvents() {\r\n    const response = await fetch('http://localhost:8080/events');\r\n\r\n    if (!response.ok) {\r\n        //return {isError: true, message: \"Could not fetch events.\"};\r\n        //throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }),\r\n        //    {status: 500});\r\n        return json({ message: \"Could not fetch events.\" }, { status: 500 });\r\n    }\r\n    else {\r\n        //return response;\r\n        const resData = await response.json();\r\n        console.log(resData.events);\r\n        return resData.events;\r\n    }\r\n}\r\n\r\n\r\nexport async function action({ params, request }) {\r\n    const eventId = params.eventId;\r\n    const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\r\n        method: request.method,\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw json({ message: \"Could not delete event.\" },\r\n            { status: 500 });\r\n    }\r\n\r\n    return redirect(\"/events\");\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}