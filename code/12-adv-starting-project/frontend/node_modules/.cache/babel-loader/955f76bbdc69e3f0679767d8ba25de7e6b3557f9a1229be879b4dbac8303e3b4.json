{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blakleyd\\\\source\\\\repos\\\\drblakl\\\\react-complete-guide-code\\\\code\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport HomePage from \"./pages/Home\";\nimport EventsPage, { loader as eventsLoader } from \"./pages/Events\";\nimport EventDetailPage, { loader as eventDetailsLoader } from \"./pages/EventDetail\";\nimport NewEventPage, { action as newEventAction } from \"./pages/NewEvent\";\nimport EditEventPage from \"./pages/EditEvent\";\nimport RootLayout from \"./pages/Root\";\nimport EventsRootLayout from \"./pages/EventsRoot\";\nimport ErrorPage from \"./pages/Error\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n\n// DONE\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// DONE\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 22\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 27\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 41\n      }, this)\n    }, {\n      path: \"events\",\n      element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 46\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 38\n        }, this),\n        loader: eventsLoader\n      }, {\n        path: \":eventId\",\n        id: \"event-detail\",\n        loader: eventDetailsLoader,\n        children: [{\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 57\n          }, this)\n        }, {\n          path: \"edit\",\n          element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 58\n          }, this)\n        }]\n      }, {\n        path: \"new\",\n        element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 49\n        }, this),\n        action: newEventAction\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 12\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","HomePage","EventsPage","loader","eventsLoader","EventDetailPage","eventDetailsLoader","NewEventPage","action","newEventAction","EditEventPage","RootLayout","EventsRootLayout","ErrorPage","jsxDEV","_jsxDEV","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","_c","$RefreshReg$"],"sources":["C:/Users/blakleyd/source/repos/drblakl/react-complete-guide-code/code/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["import { RouterProvider, createBrowserRouter } from \"react-router-dom\";\r\nimport HomePage from \"./pages/Home\";\r\nimport EventsPage, { loader as eventsLoader } from \"./pages/Events\";\r\nimport EventDetailPage, { loader as eventDetailsLoader } from \"./pages/EventDetail\";\r\nimport NewEventPage, { action as newEventAction } from \"./pages/NewEvent\";\r\nimport EditEventPage from \"./pages/EditEvent\";\r\nimport RootLayout from \"./pages/Root\";\r\nimport EventsRootLayout from \"./pages/EventsRoot\";\r\nimport ErrorPage from \"./pages/Error\";\r\n// Challenge / Exercise\r\n\r\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\r\n//    - HomePage\r\n//    - EventsPage\r\n//    - EventDetailPage\r\n//    - NewEventPage\r\n//    - EditEventPage\r\n// 2. Add routing & route definitions for these five pages\r\n//    - / => HomePage\r\n//    - /events => EventsPage\r\n//    - /events/<some-id> => EventDetailPage\r\n//    - /events/new => NewEventPage\r\n//    - /events/<some-id>/edit => EditEventPage\r\n\r\n// DONE\r\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\r\n// 4. Add properly working links to the MainNavigation\r\n// DONE\r\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\r\n// 6. Output a list of dummy events to the EventsPage\r\n//    Every list item should include a link to the respective EventDetailPage\r\n// 7. Output the ID of the selected event on the EventDetailPage\r\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\r\n\r\n\r\nfunction App() {\r\n\r\n    const router = createBrowserRouter([\r\n        {\r\n            path: \"/\",\r\n            element: <RootLayout />,\r\n            errorElement: <ErrorPage />,\r\n            children: [\r\n\r\n                { index: true, element: <HomePage /> },\r\n                {\r\n                    path: \"events\", element: <EventsRootLayout />,\r\n                    children: [\r\n                        {\r\n                            index: true,\r\n                            element: <EventsPage />,\r\n                            loader: eventsLoader,\r\n                        },\r\n                        {\r\n                            path: \":eventId\",\r\n                            id: \"event-detail\",\r\n                            loader: eventDetailsLoader,\r\n                            children: [\r\n                                { index: true, element: <EventDetailPage /> },\r\n                                { path: \"edit\", element: <EditEventPage /> },\r\n\r\n                            ]\r\n                        },\r\n                        { path: \"new\", element: <NewEventPage />, action: newEventAction },\r\n                    ],\r\n                },\r\n            ]\r\n        }\r\n    ]);\r\n\r\n    return <RouterProvider router={router}></RouterProvider>;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,UAAU,IAAIC,MAAM,IAAIC,YAAY,QAAQ,gBAAgB;AACnE,OAAOC,eAAe,IAAIF,MAAM,IAAIG,kBAAkB,QAAQ,qBAAqB;AACnF,OAAOC,YAAY,IAAIC,MAAM,IAAIC,cAAc,QAAQ,kBAAkB;AACzE,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,SAAS,MAAM,eAAe;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,SAASC,GAAGA,CAAA,EAAG;EAEX,MAAMC,MAAM,GAAGjB,mBAAmB,CAAC,CAC/B;IACIkB,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEJ,OAAA,CAACJ,UAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACvBC,YAAY,eAAET,OAAA,CAACF,SAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC3BE,QAAQ,EAAE,CAEN;MAAEC,KAAK,EAAE,IAAI;MAAEP,OAAO,eAAEJ,OAAA,CAACd,QAAQ;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EACtC;MACIL,IAAI,EAAE,QAAQ;MAAEC,OAAO,eAAEJ,OAAA,CAACH,gBAAgB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAC7CE,QAAQ,EAAE,CACN;QACIC,KAAK,EAAE,IAAI;QACXP,OAAO,eAAEJ,OAAA,CAACb,UAAU;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QACvBpB,MAAM,EAAEC;MACZ,CAAC,EACD;QACIc,IAAI,EAAE,UAAU;QAChBS,EAAE,EAAE,cAAc;QAClBxB,MAAM,EAAEG,kBAAkB;QAC1BmB,QAAQ,EAAE,CACN;UAAEC,KAAK,EAAE,IAAI;UAAEP,OAAO,eAAEJ,OAAA,CAACV,eAAe;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE,CAAC,EAC7C;UAAEL,IAAI,EAAE,MAAM;UAAEC,OAAO,eAAEJ,OAAA,CAACL,aAAa;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE,CAAC;MAGpD,CAAC,EACD;QAAEL,IAAI,EAAE,KAAK;QAAEC,OAAO,eAAEJ,OAAA,CAACR,YAAY;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAAEf,MAAM,EAAEC;MAAe,CAAC;IAE1E,CAAC;EAET,CAAC,CACJ,CAAC;EAEF,oBAAOM,OAAA,CAAChB,cAAc;IAACkB,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAiB,CAAC;AAC5D;AAACK,EAAA,GApCQZ,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}