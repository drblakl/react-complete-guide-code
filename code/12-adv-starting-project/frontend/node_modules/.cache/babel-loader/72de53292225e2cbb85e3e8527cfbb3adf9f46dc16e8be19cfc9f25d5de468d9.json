{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blakleyd\\\\source\\\\repos\\\\drblakl\\\\react-complete-guide-code\\\\code\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { Suspese } from \"react\";\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n\n  //if (data.isError) {\n  //    return <p>{data.message}</p>\n  //}\n  //const events = data.events;\n  //return (\n  //    <EventsList events={events} />\n  //);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //return {isError: true, message: \"Could not fetch events.\"};\n    //throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }),\n    //    {status: 500});\n    return json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Suspese","useLoaderData","json","defer","Await","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","Suspense","children","resolve","loadedEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["C:/Users/blakleyd/source/repos/drblakl/react-complete-guide-code/code/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import { Suspese } from \"react\";\r\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n    const { events } = useLoaderData();\r\n\r\n    return (\r\n        <Suspense>\r\n        <Await resolve={events}>\r\n            {(loadedEvents) => <EventsList events={loadedEvents} />}\r\n            </Await>\r\n        </Suspense>\r\n    );\r\n\r\n\r\n    //if (data.isError) {\r\n    //    return <p>{data.message}</p>\r\n    //}\r\n    //const events = data.events;\r\n    //return (\r\n    //    <EventsList events={events} />\r\n    //);\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nasync function loadEvents() {\r\n    const response = await fetch('http://localhost:8080/events');\r\n\r\n    if (!response.ok) {\r\n        //return {isError: true, message: \"Could not fetch events.\"};\r\n        //throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }),\r\n        //    {status: 500});\r\n        return json({ message: \"Could not fetch events.\" }, { status: 500 });\r\n    }\r\n    else {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport function loader() {\r\n    defer({\r\n        events: loadEvents()\r\n    });\r\n}"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AACpE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAO,CAAC,GAAGT,aAAa,CAAC,CAAC;EAElC,oBACIM,OAAA,CAACI,QAAQ;IAAAC,QAAA,eACTL,OAAA,CAACH,KAAK;MAACS,OAAO,EAAEH,MAAO;MAAAE,QAAA,EACjBE,YAAY,iBAAKP,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;;EAIf;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AAACT,EAAA,CAnBQD,UAAU;EAAA,QACIP,aAAa;AAAA;AAAAkB,EAAA,GAD3BX,UAAU;AAqBnB,eAAeA,UAAU;AAEzB,eAAeY,UAAUA,CAAA,EAAG;EACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd;IACA;IACA;IACA,OAAOrB,IAAI,CAAC;MAAEsB,OAAO,EAAE;IAA0B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACxE,CAAC,MACI;IACD,OAAOJ,QAAQ;EACnB;AACJ;AAEA,OAAO,SAASK,MAAMA,CAAA,EAAG;EACrBvB,KAAK,CAAC;IACFO,MAAM,EAAEU,UAAU,CAAC;EACvB,CAAC,CAAC;AACN;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}