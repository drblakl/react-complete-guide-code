<<<<<<< HEAD
"use strict";
=======
'use strict';
>>>>>>> fb9087a8f6cdc7859ecd725957ccb7c04a787284

Object.defineProperty(exports, "__esModule", {
  value: true
});
<<<<<<< HEAD
exports.default = void 0;

// Support both node types for existential type
// https://github.com/babel/babylon/issues/319
const reporter = context => {
  return node => {
=======
// Support both node types for existential type
// https://github.com/babel/babylon/issues/319
var reporter = function reporter(context) {
  return function (node) {
>>>>>>> fb9087a8f6cdc7859ecd725957ccb7c04a787284
    context.report({
      message: 'Unexpected use of existential type (*).',
      node
    });
  };
};

<<<<<<< HEAD
const create = context => {
=======
var create = function create(context) {
>>>>>>> fb9087a8f6cdc7859ecd725957ccb7c04a787284
  return {
    ExistentialTypeParam: reporter(context),
    ExistsTypeAnnotation: reporter(context)
  };
};

<<<<<<< HEAD
var _default = {
  create
};
exports.default = _default;
module.exports = exports.default;
=======
exports.default = {
  create
};
module.exports = exports['default'];
>>>>>>> fb9087a8f6cdc7859ecd725957ccb7c04a787284
