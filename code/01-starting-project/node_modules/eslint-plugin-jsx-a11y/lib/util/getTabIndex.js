<<<<<<< HEAD
"use strict";
=======
'use strict';
>>>>>>> fb9087a8f6cdc7859ecd725957ccb7c04a787284

Object.defineProperty(exports, "__esModule", {
  value: true
});
<<<<<<< HEAD
exports["default"] = getTabIndex;
var _jsxAstUtils = require("jsx-ast-utils");
=======

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = getTabIndex;

var _jsxAstUtils = require('jsx-ast-utils');

>>>>>>> fb9087a8f6cdc7859ecd725957ccb7c04a787284
/**
 * Returns the tabIndex value.
 */
function getTabIndex(tabIndex) {
  var literalValue = (0, _jsxAstUtils.getLiteralPropValue)(tabIndex);

  // String and number values.
<<<<<<< HEAD
  if (['string', 'number'].indexOf(typeof literalValue) > -1) {
=======
  if (['string', 'number'].indexOf(typeof literalValue === 'undefined' ? 'undefined' : _typeof(literalValue)) > -1) {
>>>>>>> fb9087a8f6cdc7859ecd725957ccb7c04a787284
    // Empty string will convert to zero, so check for it explicity.
    if (typeof literalValue === 'string' && literalValue.length === 0) {
      return undefined;
    }
    var value = Number(literalValue);
    if (Number.isNaN(value)) {
      return undefined;
    }
<<<<<<< HEAD
=======

>>>>>>> fb9087a8f6cdc7859ecd725957ccb7c04a787284
    return Number.isInteger(value) ? value : undefined;
  }

  // Booleans are not valid values, return undefined.
  if (literalValue === true || literalValue === false) {
    return undefined;
  }
<<<<<<< HEAD
  return (0, _jsxAstUtils.getPropValue)(tabIndex);
}
module.exports = exports.default;
=======

  return (0, _jsxAstUtils.getPropValue)(tabIndex);
}
>>>>>>> fb9087a8f6cdc7859ecd725957ccb7c04a787284
