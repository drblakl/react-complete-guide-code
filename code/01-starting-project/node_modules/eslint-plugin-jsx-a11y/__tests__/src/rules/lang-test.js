<<<<<<< HEAD
=======
/* eslint-env jest */
>>>>>>> fb9087a8f6cdc7859ecd725957ccb7c04a787284
/**
 * @fileoverview Enforce lang attribute has a valid value.
 * @author Ethan Cohen
 */

// -----------------------------------------------------------------------------
// Requirements
// -----------------------------------------------------------------------------

import { RuleTester } from 'eslint';
import parserOptionsMapper from '../../__util__/parserOptionsMapper';
import rule from '../../../src/rules/lang';

// -----------------------------------------------------------------------------
// Tests
// -----------------------------------------------------------------------------

const ruleTester = new RuleTester();

const expectedError = {
  message: 'lang attribute must have a valid value.',
  type: 'JSXAttribute',
};

<<<<<<< HEAD
const componentsSettings = {
  'jsx-a11y': {
    components: {
      Foo: 'html',
    },
  },
};

=======
>>>>>>> fb9087a8f6cdc7859ecd725957ccb7c04a787284
ruleTester.run('lang', rule, {
  valid: [
    { code: '<div />;' },
    { code: '<div foo="bar" />;' },
    { code: '<div lang="foo" />;' },
    { code: '<html lang="en" />' },
    { code: '<html lang="en-US" />' },
<<<<<<< HEAD
    { code: '<html lang="zh-Hans" />' },
    { code: '<html lang="zh-Hant-HK" />' },
    { code: '<html lang="zh-yue-Hant" />' },
    { code: '<html lang="ja-Latn" />' },
    { code: '<html lang={foo} />' },
    { code: '<HTML lang="foo" />' },
    { code: '<Foo lang={undefined} />' },
    { code: '<Foo lang="en" />', settings: componentsSettings },
=======
    { code: '<html lang={foo} />' },
    { code: '<HTML lang="foo" />' },
    { code: '<Foo lang="bar" />' },
>>>>>>> fb9087a8f6cdc7859ecd725957ccb7c04a787284
  ].map(parserOptionsMapper),
  invalid: [
    { code: '<html lang="foo" />', errors: [expectedError] },
    { code: '<html lang="zz-LL" />', errors: [expectedError] },
    { code: '<html lang={undefined} />', errors: [expectedError] },
<<<<<<< HEAD
    { code: '<Foo lang={undefined} />', settings: componentsSettings, errors: [expectedError] },
=======
>>>>>>> fb9087a8f6cdc7859ecd725957ccb7c04a787284
  ].map(parserOptionsMapper),
});
