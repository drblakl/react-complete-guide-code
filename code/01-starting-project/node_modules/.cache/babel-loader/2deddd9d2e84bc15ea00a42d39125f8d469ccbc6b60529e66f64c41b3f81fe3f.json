{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blakleyd\\\\source\\\\repos\\\\drblakl\\\\react-complete-guide-code\\\\code\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    isValid: enteredNameIsValid,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.trim() !== \"\" && enteredEmail.trim().indexOf(\"@\") !== -1;\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    if (!enteredEmailIsValid) {\n      return;\n    }\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmail(\"\");\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: nameInputChangeHandler,\n        value: enteredName,\n        onBlur: nameInputBlurHandler,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: emailInputChangeHandler,\n        value: enteredEmail,\n        onBlur: emailInputBlurHandler,\n        type: \"text\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty and must contain an @ sign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(SimpleInput, \"fnSV1fP0/zQxEhO9rtuMdnamxr8=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","hasError","nameInputHasError","isValid","enteredNameIsValid","valueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","indexOf","emailInputIsInvalid","formIsValid","nameInputChangeHandler","event","setEnteredName","target","nameInputBlurHandler","setEnteredNameTouched","emailInputChangeHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","nameInputClasses","nameInputIsInvalid","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onBlur","type","id","disabled","_c","$RefreshReg$"],"sources":["C:/Users/blakleyd/source/repos/drblakl/react-complete-guide-code/code/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport useInput from \"../hooks/use-input\";\r\n\r\nconst SimpleInput = (props) => {\r\n\r\n    const { value: enteredName,\r\n        hasError: nameInputHasError,\r\n        isValid: enteredNameIsValid,\r\n        valueChangeHandler: nameChangedHandler,\r\n        inputBlurHandler: nameBlurHandler } = useInput(value => value.trim() !== '');\r\n\r\n    const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n    const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\r\n\r\n    const enteredEmailIsValid = enteredEmail.trim() !== \"\" && enteredEmail.trim().indexOf(\"@\") !== -1;\r\n    const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\r\n\r\n\r\n    let formIsValid = false;\r\n\r\n    if (enteredNameIsValid && enteredEmailIsValid) {\r\n        formIsValid = true;\r\n    }\r\n\r\n    const nameInputChangeHandler = event => {\r\n        setEnteredName(event.target.value);\r\n    };\r\n\r\n    const nameInputBlurHandler = event => {\r\n        setEnteredNameTouched(true);\r\n    };\r\n\r\n    const emailInputChangeHandler = event => {\r\n        setEnteredEmail(event.target.value);\r\n    };\r\n\r\n    const emailInputBlurHandler = event => {\r\n        setEnteredEmailTouched(true);\r\n    };\r\n\r\n    const formSubmissionHandler = event => {\r\n        event.preventDefault();\r\n\r\n        setEnteredNameTouched(true);\r\n        setEnteredEmailTouched(true);\r\n\r\n        if (!enteredNameIsValid) {\r\n            return;\r\n        }\r\n\r\n        if (!enteredEmailIsValid) {\r\n            return;\r\n        }\r\n\r\n        setEnteredName(\"\");\r\n        setEnteredNameTouched(false);\r\n\r\n        setEnteredEmail(\"\");\r\n        setEnteredEmailTouched(false);\r\n    };\r\n\r\n    const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\r\n    const emailInputClasses = emailInputIsInvalid ? \"form-control invalid\" : \"form-control\";\r\n\r\n    return (\r\n        <form onSubmit={formSubmissionHandler}>\r\n            <div className={nameInputClasses} >\r\n                <label htmlFor='name'>Your Name</label>\r\n                <input\r\n                    onChange={nameInputChangeHandler}\r\n                    value={enteredName}\r\n                    onBlur={nameInputBlurHandler}\r\n                    type='text' id='name' />\r\n                {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\r\n            </div>\r\n            <div className={emailInputClasses} >\r\n                <label htmlFor='email'>Your Email</label>\r\n                <input\r\n                    onChange={emailInputChangeHandler}\r\n                    value={enteredEmail}\r\n                    onBlur={emailInputBlurHandler}\r\n                    type='text' id='email' />\r\n                {emailInputIsInvalid && <p className=\"error-text\">Email must not be empty and must contain an @ sign</p>}\r\n            </div>\r\n            <div className=\"form-actions\">\r\n                <button disabled={!formIsValid}>Submit</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SimpleInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}