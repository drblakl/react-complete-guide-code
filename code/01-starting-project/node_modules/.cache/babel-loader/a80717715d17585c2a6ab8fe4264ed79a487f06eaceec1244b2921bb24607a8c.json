{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blakleyd\\\\source\\\\repos\\\\drblakl\\\\react-complete-guide-code\\\\code\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: nameInputChangeHandler,\n        value: enteredName,\n        onBlur: nameInputBlurHandler,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(SimpleInput, \"LgiCUeBZKlto+n6NHgnrvDwlEEY=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","nameInputIsInvalid","formIsValid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","formSubmissionHandler","preventDefault","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onBlur","type","id","disabled","_c","$RefreshReg$"],"sources":["C:/Users/blakleyd/source/repos/drblakl/react-complete-guide-code/code/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst SimpleInput = (props) => {\r\n    const [enteredName, setEnteredName] = useState(\"\");\r\n    const [enteredNameTouched, setEnteredNameTouched] = useState(false);\r\n\r\n    const enteredNameIsValid = enteredName.trim() !== \"\";\r\n    const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\r\n\r\n    let formIsValid = false;\r\n\r\n    if (enteredNameIsValid) {\r\n        formIsValid = true;\r\n    }\r\n\r\n    const nameInputChangeHandler = event => {\r\n        setEnteredName(event.target.value);\r\n    };\r\n\r\n    const nameInputBlurHandler = event => {\r\n        setEnteredNameTouched(true);\r\n    };\r\n\r\n    const formSubmissionHandler = event => {\r\n        event.preventDefault();\r\n\r\n        setEnteredNameTouched(true);\r\n\r\n        if (!enteredNameIsValid) {\r\n            return;\r\n        }\r\n\r\n        setEnteredName(\"\");\r\n        setEnteredNameTouched(false);\r\n    };\r\n\r\n    const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\r\n\r\n    return (\r\n        <form onSubmit={formSubmissionHandler}>\r\n            <div className={nameInputClasses} >\r\n                <label htmlFor='name'>Your Name</label>\r\n                <input\r\n                    onChange={nameInputChangeHandler}\r\n                    value={enteredName}\r\n                    onBlur={nameInputBlurHandler}\r\n                    type='text' id='name' />\r\n                {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\r\n            </div>\r\n            <div className=\"form-actions\">\r\n                <button disabled={!formIsValid}>Submit</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SimpleInput;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAMU,kBAAkB,GAAGJ,WAAW,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE;EACpD,MAAMC,kBAAkB,GAAG,CAACF,kBAAkB,IAAIF,kBAAkB;EAEpE,IAAIK,WAAW,GAAG,KAAK;EAEvB,IAAIH,kBAAkB,EAAE;IACpBG,WAAW,GAAG,IAAI;EACtB;EAEA,MAAMC,sBAAsB,GAAGC,KAAK,IAAI;IACpCR,cAAc,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EAED,MAAMC,oBAAoB,GAAGH,KAAK,IAAI;IAClCN,qBAAqB,CAAC,IAAI,CAAC;EAC/B,CAAC;EAED,MAAMU,qBAAqB,GAAGJ,KAAK,IAAI;IACnCA,KAAK,CAACK,cAAc,CAAC,CAAC;IAEtBX,qBAAqB,CAAC,IAAI,CAAC;IAE3B,IAAI,CAACC,kBAAkB,EAAE;MACrB;IACJ;IAEAH,cAAc,CAAC,EAAE,CAAC;IAClBE,qBAAqB,CAAC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMY,gBAAgB,GAAGT,kBAAkB,GAAG,sBAAsB,GAAG,cAAc;EAErF,oBACIV,OAAA;IAAMoB,QAAQ,EAAEH,qBAAsB;IAAAI,QAAA,gBAClCrB,OAAA;MAAKsB,SAAS,EAAEH,gBAAiB;MAAAE,QAAA,gBAC7BrB,OAAA;QAAOuB,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvC3B,OAAA;QACI4B,QAAQ,EAAEhB,sBAAuB;QACjCG,KAAK,EAAEX,WAAY;QACnByB,MAAM,EAAEb,oBAAqB;QAC7Bc,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC3BjB,kBAAkB,iBAAIV,OAAA;QAAGsB,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAsB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC,eACN3B,OAAA;MAAKsB,SAAS,EAAC,cAAc;MAAAD,QAAA,eACzBrB,OAAA;QAAQgC,QAAQ,EAAE,CAACrB,WAAY;QAAAU,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf,CAAC;AAACxB,EAAA,CApDIF,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AAsDjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}