{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blakleyd\\\\source\\\\repos\\\\drblakl\\\\react-complete-guide-code\\\\code\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = () => {\n  _s();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const enteredEmailIsValid = enteredEmail.trim() !== '';\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const nameInputHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const emailInputHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    if (!enteredEmailIsValid) {\n      return;\n    }\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputHandler,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputHandler,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Email must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(SimpleInput, \"N/gy9exlzawUfXJbUo+845nWhTw=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SimpleInput","_s","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","nameInputIsInvalid","enteredEmailIsValid","emailInputIsInvalid","formIsValid","nameInputHandler","event","target","value","emailInputHandler","nameInputBlurHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","nameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/Users/blakleyd/source/repos/drblakl/react-complete-guide-code/code/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst SimpleInput = () => {\r\n    const [enteredName, setEnteredName] = useState('');\r\n    const [enteredNameTouched, setEnteredNameTouched] = useState(false);\r\n\r\n    const [enteredEmail, setEnteredEmail] = useState('');\r\n    const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\r\n\r\n    const enteredNameIsValid = enteredName.trim() !== '';\r\n    const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\r\n\r\n    const enteredEmailIsValid = enteredEmail.trim() !== '';\r\n    const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\r\n\r\n\r\n    let formIsValid = false;\r\n    if (enteredNameIsValid && enteredEmailIsValid) {\r\n        formIsValid = true;\r\n    }\r\n\r\n    const nameInputHandler = event => {\r\n        setEnteredName(event.target.value);\r\n    };\r\n\r\n    const emailInputHandler = event => {\r\n        setEnteredEmail(event.target.value);\r\n    };\r\n\r\n    const nameInputBlurHandler = event => {\r\n        setEnteredNameTouched(true);\r\n    }\r\n    const emailInputBlurHandler = event => {\r\n        setEnteredEmailTouched(true);\r\n    }\r\n\r\n    const formSubmissionHandler = event => {\r\n        event.preventDefault();\r\n        setEnteredNameTouched(true);\r\n        setEnteredEmailTouched(true);\r\n\r\n        if (!enteredNameIsValid) {\r\n            return;\r\n        }\r\n        if (!enteredEmailIsValid) {\r\n            return;\r\n        }\r\n        setEnteredName('');\r\n        setEnteredEmail('');\r\n        setEnteredNameTouched(false);\r\n        setEnteredEmailTouched(false);\r\n    }\r\n\r\n    const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\r\n    const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\r\n\r\n    return (\r\n        <form onSubmit={formSubmissionHandler}>\r\n            <div className={nameInputClasses}>\r\n                <label htmlFor='name'>Your Name</label>\r\n                <input\r\n                    type='text'\r\n                    id='name'\r\n                    onChange={nameInputHandler}\r\n                    onBlur={nameInputBlurHandler}\r\n                />\r\n            </div>\r\n            {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\r\n            <div className={emailInputClasses}>\r\n                <label htmlFor='email'>Email</label>\r\n                <input\r\n                    type='email'\r\n                    id='email'\r\n                    onChange={emailInputHandler}\r\n                    onBlur={emailInputBlurHandler}\r\n                />\r\n            </div>\r\n            {emailInputIsInvalid && <p className=\"error-text\">Email must not be empty</p>}\r\n            <div className=\"form-actions\">\r\n                <button disabled={formIsValid}>Submit</button>\r\n            </div>\r\n        </form >\r\n    );\r\n};\r\n\r\nexport default SimpleInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}