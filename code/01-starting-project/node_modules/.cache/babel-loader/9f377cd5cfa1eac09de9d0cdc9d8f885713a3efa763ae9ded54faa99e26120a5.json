{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useReducer } from \"react\";\nconst initialInputState = {\n  value: \"\",\n  isTouched: false\n};\nconst inputStateReducer = (state, action) => {\n  return inputStateReducer;\n};\nconst useInput = validateValue => {\n  _s();\n  useReducer(inputStateReducer, {});\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n  const inputBlurHandler = event => {\n    setIsTouched(true);\n  };\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n_s(useInput, \"2x+j/JNDqrJ0mXkFsWdf+OaGo7M=\");\nexport default useInput;","map":{"version":3,"names":["useState","useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","useInput","validateValue","_s","enteredValue","setEnteredValue","setIsTouched","valueIsValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","isValid"],"sources":["C:/Users/blakleyd/source/repos/drblakl/react-complete-guide-code/code/01-starting-project/src/hooks/use-input.js"],"sourcesContent":["import { useState, useReducer } from \"react\";\r\n\r\nconst initialInputState = {\r\n    value: \"\",\r\n    isTouched: false\r\n};\r\n\r\n\r\nconst inputStateReducer = (state, action) => {\r\n    return inputStateReducer\r\n}\r\n\r\nconst useInput = (validateValue) => {\r\n    useReducer(inputStateReducer, {});\r\n\r\n    const [enteredValue, setEnteredValue] = useState(\"\");\r\n    const [isTouched, setIsTouched] = useState(false);\r\n\r\n    const valueIsValid = validateValue(enteredValue);\r\n    const hasError = !valueIsValid && isTouched;\r\n\r\n    const valueChangeHandler = event => {\r\n        setEnteredValue(event.target.value);\r\n    };\r\n\r\n    const inputBlurHandler = event => {\r\n        setIsTouched(true);\r\n    };\r\n\r\n    const reset = () => {\r\n        setEnteredValue(\"\");\r\n        setIsTouched(false);\r\n    }\r\n\r\n    return {\r\n        value: enteredValue,\r\n        isValid: valueIsValid,\r\n        hasError,\r\n        valueChangeHandler,\r\n        inputBlurHandler,\r\n        reset\r\n    };\r\n\r\n}\r\n\r\nexport default useInput;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAE5C,MAAMC,iBAAiB,GAAG;EACtBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE;AACf,CAAC;AAGD,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACzC,OAAOF,iBAAiB;AAC5B,CAAC;AAED,MAAMG,QAAQ,GAAIC,aAAa,IAAK;EAAAC,EAAA;EAChCT,UAAU,CAACI,iBAAiB,EAAE,CAAC,CAAC,CAAC;EAEjC,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACI,SAAS,EAAES,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMc,YAAY,GAAGL,aAAa,CAACE,YAAY,CAAC;EAChD,MAAMI,QAAQ,GAAG,CAACD,YAAY,IAAIV,SAAS;EAE3C,MAAMY,kBAAkB,GAAGC,KAAK,IAAI;IAChCL,eAAe,CAACK,KAAK,CAACC,MAAM,CAACf,KAAK,CAAC;EACvC,CAAC;EAED,MAAMgB,gBAAgB,GAAGF,KAAK,IAAI;IAC9BJ,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMO,KAAK,GAAGA,CAAA,KAAM;IAChBR,eAAe,CAAC,EAAE,CAAC;IACnBC,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,OAAO;IACHV,KAAK,EAAEQ,YAAY;IACnBU,OAAO,EAAEP,YAAY;IACrBC,QAAQ;IACRC,kBAAkB;IAClBG,gBAAgB;IAChBC;EACJ,CAAC;AAEL,CAAC;AAAAV,EAAA,CA/BKF,QAAQ;AAiCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}