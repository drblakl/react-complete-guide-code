{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blakleyd\\\\source\\\\repos\\\\drblakl\\\\react-complete-guide-code\\\\code\\\\01-starting-project\\\\src\\\\components\\\\BasicForm.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicForm = props => {\n  _s();\n  const {\n    value: firstName,\n    hasError: firstNameInputHasError,\n    isValid: firstNameIsValid,\n    reset: resetFirstNameInput,\n    valueChangeHandler: firstNameChangedHandler,\n    inputBlurHandler: firstNameBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: lastName,\n    hasError: lastNameInputHasError,\n    isValid: lastNameIsValid,\n    reset: resetLastNameInput,\n    valueChangeHandler: lastNameChangedHandler,\n    inputBlurHandler: lastNameBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: email,\n    hasError: emailInputHasError,\n    isValid: emailIsValid,\n    reset: resetEmailInput,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler\n  } = useInput(value => value.trim() !== '' && value.trim().indexOf(\"@\") != -1);\n  const firstNameInputClasses = firstNameInputHasError ? \"form-control invalid\" : \"form-control\";\n  const lastNameInputClasses = lastNameInputHasError ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputHasError ? \"form-control invalid\" : \"form-control\";\n  let formIsValid = false;\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    if (!formIsValid) {\n      return;\n    }\n    resetFirstNameInput();\n    resetLastNameInput();\n    resetEmailInput();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: firstNameChangedHandler,\n          onBlur: firstNameBlurHandler,\n          value: firstName,\n          className: firstNameInputClasses,\n          type: \"text\",\n          id: \"firstName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), firstNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"First Name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          onChange: lastNameChangedHandler,\n          onBlur: lastNameBlurHandler,\n          value: lastName,\n          className: lastNameInputClasses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), lastNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Last Name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailChangedHandler,\n        onBlur: emailBlurHandler,\n        value: email,\n        className: emailInputClasses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty and must contain an @ symbol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(BasicForm, \"mGLkTRi5pkifyKcUE37EpJd9m2I=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useInput","jsxDEV","_jsxDEV","BasicForm","props","_s","value","firstName","hasError","firstNameInputHasError","isValid","firstNameIsValid","reset","resetFirstNameInput","valueChangeHandler","firstNameChangedHandler","inputBlurHandler","firstNameBlurHandler","trim","lastName","lastNameInputHasError","lastNameIsValid","resetLastNameInput","lastNameChangedHandler","lastNameBlurHandler","email","emailInputHasError","emailIsValid","resetEmailInput","emailChangedHandler","emailBlurHandler","indexOf","firstNameInputClasses","lastNameInputClasses","emailInputClasses","formIsValid","formSubmissionHandler","event","preventDefault","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onBlur","type","id","disabled","_c","$RefreshReg$"],"sources":["C:/Users/blakleyd/source/repos/drblakl/react-complete-guide-code/code/01-starting-project/src/components/BasicForm.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\r\n\r\nconst BasicForm = (props) => {\r\n    const { value: firstName,\r\n        hasError: firstNameInputHasError,\r\n        isValid: firstNameIsValid,\r\n        reset: resetFirstNameInput,\r\n        valueChangeHandler: firstNameChangedHandler,\r\n        inputBlurHandler: firstNameBlurHandler } = useInput(value => value.trim() !== '');\r\n\r\n    const { value: lastName,\r\n        hasError: lastNameInputHasError,\r\n        isValid: lastNameIsValid,\r\n        reset: resetLastNameInput,\r\n        valueChangeHandler: lastNameChangedHandler,\r\n        inputBlurHandler: lastNameBlurHandler } = useInput(value => value.trim() !== '');\r\n\r\n    const { value: email,\r\n        hasError: emailInputHasError,\r\n        isValid: emailIsValid,\r\n        reset: resetEmailInput,\r\n        valueChangeHandler: emailChangedHandler,\r\n        inputBlurHandler: emailBlurHandler } = useInput(value => value.trim() !== '' && value.trim().indexOf(\"@\") != -1);\r\n\r\n\r\n    const firstNameInputClasses = firstNameInputHasError ? \"form-control invalid\" : \"form-control\";\r\n    const lastNameInputClasses = lastNameInputHasError ? \"form-control invalid\" : \"form-control\";\r\n    const emailInputClasses = emailInputHasError ? \"form-control invalid\" : \"form-control\";\r\n\r\n    let formIsValid = false;\r\n\r\n    if (firstNameIsValid && lastNameIsValid && emailIsValid) {\r\n        formIsValid = true;\r\n    }\r\n\r\n    const formSubmissionHandler = event => {\r\n        event.preventDefault();\r\n\r\n        if (!formIsValid) {\r\n            return;\r\n        }\r\n\r\n        resetFirstNameInput();\r\n        resetLastNameInput();\r\n        resetEmailInput();\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={formSubmissionHandler}>\r\n            <div className='control-group'>\r\n                <div className='form-control'>\r\n                    <label htmlFor='name'>First Name</label>\r\n                    <input\r\n                        onChange={firstNameChangedHandler}\r\n                        onBlur={firstNameBlurHandler}\r\n                        value={firstName}\r\n                        className={firstNameInputClasses}\r\n                        type='text'\r\n                        id='firstName'\r\n                    />\r\n                    {firstNameInputHasError && <p className=\"error-text\">First Name must not be empty</p>}\r\n\r\n                </div>\r\n                <div className='form-control'>\r\n                    <label htmlFor='name'>Last Name</label>\r\n                    <input\r\n                        type='text'\r\n                        id='lastName'\r\n                        onChange={lastNameChangedHandler}\r\n                        onBlur={lastNameBlurHandler}\r\n                        value={lastName}\r\n                        className={lastNameInputClasses}\r\n                    />\r\n                    {lastNameInputHasError && <p className=\"error-text\">Last Name must not be empty</p>}\r\n                </div>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label htmlFor='name'>E-Mail Address</label>\r\n                <input\r\n                    type='text'\r\n                    id='email'\r\n                    onChange={emailChangedHandler}\r\n                    onBlur={emailBlurHandler}\r\n                    value={email}\r\n                    className={emailInputClasses}\r\n                />\r\n                {emailInputHasError && <p className=\"error-text\">Email must not be empty and must contain an @ symbol</p>}\r\n            </div>\r\n            <div className='form-actions'>\r\n                <button disabled={!formIsValid}>Submit</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default BasicForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}