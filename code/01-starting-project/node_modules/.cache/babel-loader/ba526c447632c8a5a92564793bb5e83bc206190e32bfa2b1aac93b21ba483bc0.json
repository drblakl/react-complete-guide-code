{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blakleyd\\\\source\\\\repos\\\\drblakl\\\\react-complete-guide-code\\\\code\\\\01-starting-project\\\\src\\\\store\\\\auth-context.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nconst AuthContextProvider = props => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n  useEffect(() => {\n    const storedUserInfo = localStorage.getItem(\"isLoggedIn\");\n    if (storedUserInfo === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContextProvider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n_s(AuthContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","_s","setIsLoggedIn","loginHandler","localStorage","setItem","storedUserInfo","getItem","logoutHandler","removeItem","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/blakleyd/source/repos/drblakl/react-complete-guide-code/code/01-starting-project/src/store/auth-context.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AuthContext = React.createContext({\r\n    isLoggedIn: false,\r\n    onLogout: () => { },\r\n    onLogin: (email, password) => { }\r\n});\r\n\r\nconst AuthContextProvider = (props) => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    const loginHandler = (email, password) => {\r\n        // We should of course check email and password\r\n        // But it's just a dummy/ demo anyways\r\n        localStorage.setItem(\"isLoggedIn\", \"1\");\r\n        setIsLoggedIn(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const storedUserInfo = localStorage.getItem(\"isLoggedIn\");\r\n\r\n        if (storedUserInfo === \"1\") {\r\n            setIsLoggedIn(true);\r\n        }\r\n    }, []);\r\n\r\n    const logoutHandler = () => {\r\n        localStorage.removeItem(\"isLoggedIn\");\r\n        setIsLoggedIn(false);\r\n    };\r\n\r\n\r\n    return <AuthContextProvider value={{isLoggedIn: isLoggedIn, onLogout: logoutHandler, onLogin: loginHandler}}>{props.children}</AuthContextProvider>\r\n}\r\n\r\nexport default AuthContext;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAa,CAAC;EACpCC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAEA,CAAA,KAAM,CAAE,CAAC;EACnBC,OAAO,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAK,CAAE;AACpC,CAAC,CAAC;AAEF,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACnC,MAAM,CAACP,UAAU,EAAEQ,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMe,YAAY,GAAGA,CAACN,KAAK,EAAEC,QAAQ,KAAK;IACtC;IACA;IACAM,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;IACvCH,aAAa,CAAC,IAAI,CAAC;EACvB,CAAC;EAEDb,SAAS,CAAC,MAAM;IACZ,MAAMiB,cAAc,GAAGF,YAAY,CAACG,OAAO,CAAC,YAAY,CAAC;IAEzD,IAAID,cAAc,KAAK,GAAG,EAAE;MACxBJ,aAAa,CAAC,IAAI,CAAC;IACvB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,aAAa,GAAGA,CAAA,KAAM;IACxBJ,YAAY,CAACK,UAAU,CAAC,YAAY,CAAC;IACrCP,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;EAGD,oBAAOX,OAAA,CAACQ,mBAAmB;IAACW,KAAK,EAAE;MAAChB,UAAU,EAAEA,UAAU;MAAEC,QAAQ,EAAEa,aAAa;MAAEZ,OAAO,EAAEO;IAAY,CAAE;IAAAQ,QAAA,EAAEX,KAAK,CAACW;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAsB,CAAC;AACvJ,CAAC;AAAAd,EAAA,CAzBKF,mBAAmB;AAAAiB,EAAA,GAAnBjB,mBAAmB;AA2BzB,eAAeP,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}