{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blakleyd\\\\source\\\\repos\\\\drblakl\\\\react-complete-guide-code\\\\code\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log(\"name input is valid!\");\n    }\n  });\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n    console.log(nameInputRef.current.value);\n\n    //nameInputRef.current.value = \"\"; // DO NOT DO, DON'T MANIPULATE THE DOM\n    setEnteredName(\"\");\n  };\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInvalid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        onChange: nameInputChangeHandler,\n        value: enteredName,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(SimpleInput, \"bm/27lsNsiIXuRMukf2inprCLH4=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useRef","useState","useEffect","jsxDEV","_jsxDEV","SimpleInput","props","_s","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","console","log","nameInputChangeHandler","event","target","value","formSubmissionHandler","preventDefault","trim","current","nameInputIsInvalid","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","type","id","_c","$RefreshReg$"],"sources":["C:/Users/blakleyd/source/repos/drblakl/react-complete-guide-code/code/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useRef, useState, useEffect } from \"react\";\r\n\r\nconst SimpleInput = (props) => {\r\n    const nameInputRef = useRef();\r\n    const [enteredName, setEnteredName] = useState(\"\");\r\n    const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\r\n    const [enteredNameTouched, setEnteredNameTouched] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (enteredNameIsValid) {\r\n            console.log(\"name input is valid!\");\r\n        }\r\n    });\r\n\r\n    const nameInputChangeHandler = event => {\r\n        setEnteredName(event.target.value);\r\n    };\r\n\r\n    const formSubmissionHandler = event => {\r\n        event.preventDefault();\r\n\r\n        if (enteredName.trim() === \"\") {\r\n            setEnteredNameIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setEnteredNameIsValid(true);\r\n\r\n        console.log(enteredName);\r\n        console.log(nameInputRef.current.value);\r\n\r\n        //nameInputRef.current.value = \"\"; // DO NOT DO, DON'T MANIPULATE THE DOM\r\n        setEnteredName(\"\");\r\n    };\r\n\r\n    const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\r\n\r\n    const nameInputClasses = nameInputIsInvalid ? \"form-control\" : \"form-control invalid\";\r\n\r\n    return (\r\n        <form onSubmit={formSubmissionHandler}>\r\n            <div className={nameInputClasses} >\r\n                <label htmlFor='name'>Your Name</label>\r\n                <input ref={nameInputRef} onChange={nameInputChangeHandler} value={enteredName} type='text' id='name' />\r\n                {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\r\n            </div>\r\n            <div className=\"form-actions\">\r\n                <button>Submit</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SimpleInput;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAMC,YAAY,GAAGR,MAAM,CAAC,CAAC;EAC7B,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACY,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnEC,SAAS,CAAC,MAAM;IACZ,IAAIS,kBAAkB,EAAE;MACpBI,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACvC;EACJ,CAAC,CAAC;EAEF,MAAMC,sBAAsB,GAAGC,KAAK,IAAI;IACpCR,cAAc,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EAED,MAAMC,qBAAqB,GAAGH,KAAK,IAAI;IACnCA,KAAK,CAACI,cAAc,CAAC,CAAC;IAEtB,IAAIb,WAAW,CAACc,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC3BX,qBAAqB,CAAC,KAAK,CAAC;MAC5B;IACJ;IAEAA,qBAAqB,CAAC,IAAI,CAAC;IAE3BG,OAAO,CAACC,GAAG,CAACP,WAAW,CAAC;IACxBM,OAAO,CAACC,GAAG,CAACR,YAAY,CAACgB,OAAO,CAACJ,KAAK,CAAC;;IAEvC;IACAV,cAAc,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,MAAMe,kBAAkB,GAAG,CAACd,kBAAkB,IAAIE,kBAAkB;EAEpE,MAAMa,gBAAgB,GAAGD,kBAAkB,GAAG,cAAc,GAAG,sBAAsB;EAErF,oBACIrB,OAAA;IAAMuB,QAAQ,EAAEN,qBAAsB;IAAAO,QAAA,gBAClCxB,OAAA;MAAKyB,SAAS,EAAEH,gBAAiB;MAAAE,QAAA,gBAC7BxB,OAAA;QAAO0B,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvC9B,OAAA;QAAO+B,GAAG,EAAE3B,YAAa;QAAC4B,QAAQ,EAAEnB,sBAAuB;QAACG,KAAK,EAAEX,WAAY;QAAC4B,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACvGT,kBAAkB,iBAAIrB,OAAA;QAAGyB,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAsB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC,eACN9B,OAAA;MAAKyB,SAAS,EAAC,cAAc;MAAAD,QAAA,eACzBxB,OAAA;QAAAwB,QAAA,EAAQ;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf,CAAC;AAAC3B,EAAA,CAjDIF,WAAW;AAAAkC,EAAA,GAAXlC,WAAW;AAmDjB,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}