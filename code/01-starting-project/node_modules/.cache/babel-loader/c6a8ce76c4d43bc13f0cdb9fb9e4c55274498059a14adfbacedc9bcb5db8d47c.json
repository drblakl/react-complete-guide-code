{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blakleyd\\\\source\\\\repos\\\\drblakl\\\\react-complete-guide-code\\\\code\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const enteredNameIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.includes('@');\n  const enteredEmailIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    if (enteredName.trim() === '') {\n      return;\n    }\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClasses = enteredNameIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = enteredEmailIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), enteredNameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        value: enteredEmail,\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), enteredEmailIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty and must contain @.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(SimpleInput, \"N/gy9exlzawUfXJbUo+845nWhTw=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","enteredNameIsInvalid","enteredEmailIsValid","includes","enteredEmailIsInvalid","formIsValid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","emailInputChangeHandler","emailInputBlurHandler","onSubmitHandler","preventDefault","nameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/Users/blakleyd/source/repos/drblakl/react-complete-guide-code/code/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SimpleInput = (props) => {\r\n    const [enteredName, setEnteredName] = useState('');\r\n    const [enteredNameTouched, setEnteredNameTouched] = useState(false);\r\n\r\n    const [enteredEmail, setEnteredEmail] = useState('');\r\n    const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\r\n\r\n    const enteredNameIsValid = enteredName.trim() !== '';\r\n    const enteredNameIsInvalid = !enteredNameIsValid && enteredNameTouched;\r\n\r\n    const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.includes('@');\r\n    const enteredEmailIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\r\n\r\n    let formIsValid = false;\r\n\r\n    if (enteredNameIsValid && enteredEmailIsValid) {\r\n        formIsValid = true;\r\n    }\r\n\r\n    const nameInputChangeHandler = (event) => {\r\n        setEnteredName(event.target.value);\r\n    }\r\n\r\n    const nameInputBlurHandler = (event) => {\r\n        setEnteredNameTouched(true);\r\n    }\r\n\r\n    const emailInputChangeHandler = (event) => {\r\n        setEnteredEmail(event.target.value);\r\n    }\r\n\r\n    const emailInputBlurHandler = (event) => {\r\n        setEnteredEmailTouched(true);\r\n    }\r\n\r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (enteredName.trim() === '') {\r\n            return;\r\n        }\r\n\r\n        setEnteredName('');\r\n        setEnteredNameTouched(false);\r\n\r\n        setEnteredEmail('');\r\n        setEnteredEmailTouched(false);\r\n    }\r\n\r\n    const nameInputClasses = enteredNameIsInvalid ? 'form-control invalid' : 'form-control';\r\n    const emailInputClasses = enteredEmailIsInvalid ? 'form-control invalid' : 'form-control';\r\n\r\n    return (\r\n        <form onSubmit={onSubmitHandler}>\r\n            <div className={nameInputClasses}>\r\n                <label htmlFor='name'>Your Name</label>\r\n                <input type='text' id='name' value={enteredName} onChange={nameInputChangeHandler} onBlur={nameInputBlurHandler} />\r\n                {enteredNameIsInvalid && <p className='error-text'>Name must not be empty.</p>}\r\n            </div>\r\n            <div className={emailInputClasses}>\r\n                <label htmlFor='email'>Your Email</label>\r\n                <input type='text' id='email' value={enteredEmail} onChange={emailInputChangeHandler} onBlur={emailInputBlurHandler} />\r\n                {enteredEmailIsInvalid && <p className='error-text'>Email must not be empty and must contain @.</p>}\r\n            </div>\r\n            <div className=\"form-actions\">\r\n                <button disabled={!formIsValid}>Submit</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SimpleInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}