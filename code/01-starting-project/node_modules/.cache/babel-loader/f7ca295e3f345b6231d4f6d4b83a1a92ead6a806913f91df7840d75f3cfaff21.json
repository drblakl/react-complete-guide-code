{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nconst initialInputState = {\n  value: \"\",\n  isTouched: false\n};\nconst inputStateReducer = (state, action) => {\n  return inputStateReducer;\n};\nconst useInput = validateValue => {\n  _s();\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n  const inputBlurHandler = event => {\n    setIsTouched(true);\n  };\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n_s(useInput, \"gvJkPEQ6Ju5turm8Oo71bK8W7Zk=\");\nexport default useInput;","map":{"version":3,"names":["useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","useInput","validateValue","_s","inputState","dispatch","valueIsValid","enteredValue","hasError","valueChangeHandler","event","setEnteredValue","target","inputBlurHandler","setIsTouched","reset","isValid"],"sources":["C:/Users/blakleyd/source/repos/drblakl/react-complete-guide-code/code/01-starting-project/src/hooks/use-input.js"],"sourcesContent":["import { useReducer } from \"react\";\r\n\r\nconst initialInputState = {\r\n    value: \"\",\r\n    isTouched: false\r\n};\r\n\r\n\r\nconst inputStateReducer = (state, action) => {\r\n    return inputStateReducer\r\n}\r\n\r\nconst useInput = (validateValue) => {\r\n    const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\r\n\r\n    const valueIsValid = validateValue(enteredValue);\r\n    const hasError = !valueIsValid && isTouched;\r\n\r\n    const valueChangeHandler = event => {\r\n        setEnteredValue(event.target.value);\r\n    };\r\n\r\n    const inputBlurHandler = event => {\r\n        setIsTouched(true);\r\n    };\r\n\r\n    const reset = () => {\r\n        setEnteredValue(\"\");\r\n        setIsTouched(false);\r\n    }\r\n\r\n    return {\r\n        value: enteredValue,\r\n        isValid: valueIsValid,\r\n        hasError,\r\n        valueChangeHandler,\r\n        inputBlurHandler,\r\n        reset\r\n    };\r\n\r\n}\r\n\r\nexport default useInput;"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,MAAMC,iBAAiB,GAAG;EACtBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE;AACf,CAAC;AAGD,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACzC,OAAOF,iBAAiB;AAC5B,CAAC;AAED,MAAMG,QAAQ,GAAIC,aAAa,IAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGX,UAAU,CAACI,iBAAiB,EAAEH,iBAAiB,CAAC;EAE/E,MAAMW,YAAY,GAAGJ,aAAa,CAACK,YAAY,CAAC;EAChD,MAAMC,QAAQ,GAAG,CAACF,YAAY,IAAIT,SAAS;EAE3C,MAAMY,kBAAkB,GAAGC,KAAK,IAAI;IAChCC,eAAe,CAACD,KAAK,CAACE,MAAM,CAAChB,KAAK,CAAC;EACvC,CAAC;EAED,MAAMiB,gBAAgB,GAAGH,KAAK,IAAI;IAC9BI,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAChBJ,eAAe,CAAC,EAAE,CAAC;IACnBG,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,OAAO;IACHlB,KAAK,EAAEW,YAAY;IACnBS,OAAO,EAAEV,YAAY;IACrBE,QAAQ;IACRC,kBAAkB;IAClBI,gBAAgB;IAChBE;EACJ,CAAC;AAEL,CAAC;AAAAZ,EAAA,CA5BKF,QAAQ;AA8Bd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}