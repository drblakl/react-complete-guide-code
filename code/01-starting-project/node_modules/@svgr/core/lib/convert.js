"use strict";

exports.__esModule = true;
exports.default = void 0;

<<<<<<< HEAD
var _state = require("./state");

var _config = require("./config");

var _plugins = require("./plugins");

function run(code, config, state) {
  const expandedState = (0, _state.expandState)(state);
  const plugins = (0, _plugins.getPlugins)(config, state).map(_plugins.resolvePlugin);
  let nextCode = String(code).replace('\0', ''); // eslint-disable-next-line no-restricted-syntax

  for (const plugin of plugins) {
    nextCode = plugin(nextCode, config, expandedState);
  }

  return nextCode;
}

async function convert(code, config = {}, state = {}) {
  config = await (0, _config.loadConfig)(config, state);
  return run(code, config, state);
}

convert.sync = (code, config = {}, state = {}) => {
  config = _config.loadConfig.sync(config, state);
  return run(code, config, state);
};
=======
var _svgo = _interopRequireDefault(require("./plugins/svgo"));

var _h2x = _interopRequireDefault(require("./plugins/h2x"));

var _prettier = _interopRequireDefault(require("./plugins/prettier"));

var _transform = _interopRequireDefault(require("./plugins/transform"));

var _util = require("./util");

var _config = require("./config");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

async function convert(code, config = {}, state = {}) {
  config = _extends({}, _config.DEFAULT_CONFIG, config);
  state = (0, _util.expandState)(state);
  let result = code; // Remove null-byte character (copy/paste from Illustrator)

  result = String(result).replace('\0', '');
  result = await (0, _svgo.default)(result, config, state);
  result = await (0, _h2x.default)(result, config, state);
  result = await (0, _transform.default)(result, config, state);
  result = await (0, _prettier.default)(result, config, state);
  return result;
}
>>>>>>> fb9087a8f6cdc7859ecd725957ccb7c04a787284

var _default = convert;
exports.default = _default;