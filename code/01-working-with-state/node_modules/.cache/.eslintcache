[{"C:\\Users\\blakleyd\\source\\repos\\drblakl\\react-complete-guide-code\\code\\01-working-with-state\\src\\index.js":"1","C:\\Users\\blakleyd\\source\\repos\\drblakl\\react-complete-guide-code\\code\\01-working-with-state\\src\\App.js":"2","C:\\Users\\blakleyd\\source\\repos\\drblakl\\react-complete-guide-code\\code\\01-working-with-state\\src\\components\\Expenses\\Expenses.js":"3","C:\\Users\\blakleyd\\source\\repos\\drblakl\\react-complete-guide-code\\code\\01-working-with-state\\src\\components\\Expenses\\ExpenseItem.js":"4","C:\\Users\\blakleyd\\source\\repos\\drblakl\\react-complete-guide-code\\code\\01-working-with-state\\src\\components\\UI\\Card.js":"5","C:\\Users\\blakleyd\\source\\repos\\drblakl\\react-complete-guide-code\\code\\01-working-with-state\\src\\components\\Expenses\\ExpenseDate.js":"6","C:\\Users\\blakleyd\\source\\repos\\drblakl\\react-complete-guide-code\\code\\01-working-with-state\\src\\components\\NewExpense\\NewExpense.js":"7","C:\\Users\\blakleyd\\source\\repos\\drblakl\\react-complete-guide-code\\code\\01-working-with-state\\src\\components\\NewExpense\\ExpenseForm.js":"8","C:\\Users\\blakleyd\\source\\repos\\drblakl\\react-complete-guide-code\\code\\01-working-with-state\\src\\components\\Expenses\\ExpensesFilter.js":"9"},{"size":214,"mtime":1692877044106,"results":"10","hashOfConfig":"11"},{"size":1307,"mtime":1693258513217,"results":"12","hashOfConfig":"11"},{"size":1832,"mtime":1693263675522,"results":"13","hashOfConfig":"11"},{"size":776,"mtime":1692877044087,"results":"14","hashOfConfig":"11"},{"size":216,"mtime":1692877044101,"results":"15","hashOfConfig":"11"},{"size":551,"mtime":1692877044081,"results":"16","hashOfConfig":"11"},{"size":643,"mtime":1693256618112,"results":"17","hashOfConfig":"11"},{"size":3192,"mtime":1693255871662,"results":"18","hashOfConfig":"11"},{"size":853,"mtime":1693263104880,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i53221",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\blakleyd\\source\\repos\\drblakl\\react-complete-guide-code\\code\\01-working-with-state\\src\\index.js",[],[],"C:\\Users\\blakleyd\\source\\repos\\drblakl\\react-complete-guide-code\\code\\01-working-with-state\\src\\App.js",[],[],"C:\\Users\\blakleyd\\source\\repos\\drblakl\\react-complete-guide-code\\code\\01-working-with-state\\src\\components\\Expenses\\Expenses.js",[],[],"C:\\Users\\blakleyd\\source\\repos\\drblakl\\react-complete-guide-code\\code\\01-working-with-state\\src\\components\\Expenses\\ExpenseItem.js",[],[],"C:\\Users\\blakleyd\\source\\repos\\drblakl\\react-complete-guide-code\\code\\01-working-with-state\\src\\components\\UI\\Card.js",[],[],"C:\\Users\\blakleyd\\source\\repos\\drblakl\\react-complete-guide-code\\code\\01-working-with-state\\src\\components\\Expenses\\ExpenseDate.js",[],[],"C:\\Users\\blakleyd\\source\\repos\\drblakl\\react-complete-guide-code\\code\\01-working-with-state\\src\\components\\NewExpense\\NewExpense.js",[],[],"C:\\Users\\blakleyd\\source\\repos\\drblakl\\react-complete-guide-code\\code\\01-working-with-state\\src\\components\\NewExpense\\ExpenseForm.js",["49"],[],"import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    //const [userInput, setUserInput] = useState({\r\n    //    enteredTitle: '',\r\n    //    enteredAmount: '',\r\n    //    enteredDate: ''\r\n    //});\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n        //setUserInput({\r\n        //    ...userInput,\r\n        //    enteredTitle: event.target.value\r\n        //});\r\n        // Ensures we get the latest state snapshot\r\n        // If state update relies on previous state\r\n        //setUserInput((prevState) => {\r\n        //    return {\r\n        //        ...prevState,\r\n        //        enteredTitle: event.target.value\r\n        //    };\r\n        //});\r\n    };\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n        //setUserInput({\r\n        //    ...userInput,\r\n        //    enteredAmount: event.target.value\r\n        //});\r\n    };\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n        //setUserInput({\r\n        //    ...userInput,\r\n        //    enteredDate: event.target.value\r\n        //});\r\n    };\r\n\r\n    const inputChangeHandler = (identifier, value) => {\r\n        if (identifier === 'title') {\r\n            setEnteredTitle(value);\r\n        }\r\n        else if (identifier === 'date') {\r\n            setEnteredDate(value);\r\n        }\r\n        else {\r\n            setEnteredAmount(value);\r\n        }\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        // Prevent page from reloading\r\n        event.preventDefault();\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate)\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    };\r\n\r\n  return (\r\n      <form onSubmit={submitHandler}>\r\n          <div className='new-expense__controls'>\r\n            <div className='new-expense__control'>\r\n              <label>Title</label>\r\n                      {/*<input type='text' onChange={(event) => inputChangeHandler('title', event.target.value)} />*/}\r\n                  <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\r\n            </div>\r\n            <div className='new-expense__control'>\r\n              <label>Amount</label>\r\n                  <input type='number' min='0.01' step='0.01' value={enteredAmount} onChange={amountChangeHandler} />\r\n            </div>\r\n            <div className='new-expense__control'>\r\n              <label>Date</label>\r\n                  <input type='date' min='2019-01-01' max='2022-12-31' value={enteredDate} onChange={dateChangeHandler} />\r\n            </div>\r\n          </div>\r\n          <div className='new-expense__actions'>\r\n            <button type='submit'>Add Expense</button>\r\n          </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n",[],"C:\\Users\\blakleyd\\source\\repos\\drblakl\\react-complete-guide-code\\code\\01-working-with-state\\src\\components\\Expenses\\ExpensesFilter.js",[],[],{"ruleId":"50","severity":1,"message":"51","line":49,"column":11,"nodeType":"52","messageId":"53","endLine":49,"endColumn":29},"no-unused-vars","'inputChangeHandler' is assigned a value but never used.","Identifier","unusedVar"]